id,snippet,language,repo_file_name,github_repo_url,license,commit_hash,starting_line_number,chunk_size
186311,"import sys, os
from sphinx.highlighting import lexers
from pygments.lexers.web import PhpLexer


",Python,guzzle/guzzle/docs/conf.py,https://github.com/guzzle/guzzle,MIT,"55d46a8ba3239be2439fb660b5cc9fba69155113
",0,5
186312,"lexers['php'] = PhpLexer(startinline=True, linenos=1)
lexers['php-annotations'] = PhpLexer(startinline=True, linenos=1)
primary_domain = 'php'

extensions = []
",Python,guzzle/guzzle/docs/conf.py,https://github.com/guzzle/guzzle,MIT,"55d46a8ba3239be2439fb660b5cc9fba69155113
",5,5
186313,"templates_path = ['_templates']
source_suffix = '.rst'
master_doc = 'index'
project = u'Guzzle'
copyright = u'2015, Michael Dowling'
",Python,guzzle/guzzle/docs/conf.py,https://github.com/guzzle/guzzle,MIT,"55d46a8ba3239be2439fb660b5cc9fba69155113
",10,5
186314,"version = '7'
html_title = ""Guzzle Documentation""
html_short_title = ""Guzzle 7""

exclude_patterns = ['_build']
",Python,guzzle/guzzle/docs/conf.py,https://github.com/guzzle/guzzle,MIT,"55d46a8ba3239be2439fb660b5cc9fba69155113
",15,5
186315,"html_static_path = ['_static']

##### Guzzle sphinx theme

import guzzle_sphinx_theme
",Python,guzzle/guzzle/docs/conf.py,https://github.com/guzzle/guzzle,MIT,"55d46a8ba3239be2439fb660b5cc9fba69155113
",20,5
186316,"html_translator_class = 'guzzle_sphinx_theme.HTMLTranslator'
html_theme_path = guzzle_sphinx_theme.html_theme_path()
html_theme = 'guzzle_sphinx_theme'

# Custom sidebar templates, maps document names to template names.
",Python,guzzle/guzzle/docs/conf.py,https://github.com/guzzle/guzzle,MIT,"55d46a8ba3239be2439fb660b5cc9fba69155113
",25,5
186317,"html_sidebars = {
    '**': ['logo-text.html', 'globaltoc.html', 'searchbox.html']
}

# Register the theme as an extension to generate a sitemap.xml
",Python,guzzle/guzzle/docs/conf.py,https://github.com/guzzle/guzzle,MIT,"55d46a8ba3239be2439fb660b5cc9fba69155113
",30,5
186318,"extensions.append(""guzzle_sphinx_theme"")

# Guzzle theme options (see theme.conf for more information)
html_theme_options = {

",Python,guzzle/guzzle/docs/conf.py,https://github.com/guzzle/guzzle,MIT,"55d46a8ba3239be2439fb660b5cc9fba69155113
",35,5
186319,"    # Set the path to a special layout to include for the homepage
    # ""index_template"": ""homepage.html"",

    # Allow a separate homepage from the master_doc
    # homepage = index
",Python,guzzle/guzzle/docs/conf.py,https://github.com/guzzle/guzzle,MIT,"55d46a8ba3239be2439fb660b5cc9fba69155113
",40,5
186320,"
    # Set the name of the project to appear in the nav menu
    # ""project_nav_name"": ""Guzzle"",

    # Set your Disqus short name to enable comments
",Python,guzzle/guzzle/docs/conf.py,https://github.com/guzzle/guzzle,MIT,"55d46a8ba3239be2439fb660b5cc9fba69155113
",45,5
186321,"    # ""disqus_comments_shortname"": ""my_disqus_comments_short_name"",

    # Set you GA account ID to enable tracking
    # ""google_analytics_account"": ""my_ga_account"",

",Python,guzzle/guzzle/docs/conf.py,https://github.com/guzzle/guzzle,MIT,"55d46a8ba3239be2439fb660b5cc9fba69155113
",50,5
186322,"    # Path to a touch icon
    # ""touch_icon"": """",

    # Specify a base_url used to generate sitemap.xml links. If not
    # specified, then no sitemap will be built.
",Python,guzzle/guzzle/docs/conf.py,https://github.com/guzzle/guzzle,MIT,"55d46a8ba3239be2439fb660b5cc9fba69155113
",55,5
186323,"    ""base_url"": ""http://guzzlephp.org""

    # Allow the ""Table of Contents"" page to be defined separately from ""master_doc""
    # tocpage = Contents

",Python,guzzle/guzzle/docs/conf.py,https://github.com/guzzle/guzzle,MIT,"55d46a8ba3239be2439fb660b5cc9fba69155113
",60,5
189703,"# Copyright 2015 The TensorFlow Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",0,5
189704,"#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",5,5
189705,"# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================
""""""Bring in all of the public TensorFlow interface into this module.""""""
",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",10,5
189706,"
from __future__ import absolute_import as _absolute_import
from __future__ import division as _division
from __future__ import print_function as _print_function

",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",15,5
189707,"import logging as _logging
import os as _os
import six as _six
import sys as _sys

",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",20,5
189708,"from tensorflow.python.tools import module_util as _module_util
from tensorflow.python.util.lazy_loader import LazyLoader as _LazyLoader

# pylint: disable=g-bad-import-order

",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",25,5
189709,"# API IMPORTS PLACEHOLDER

# WRAPPER_PLACEHOLDER

# Hook external TensorFlow modules.
",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",30,5
189710,"_current_module = _sys.modules[__name__]
try:
  from tensorboard.summary._tf import summary
  _current_module.__path__ = (
      [_module_util.get_parent_dir(summary)] + _current_module.__path__)
",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",35,5
189711,"  setattr(_current_module, ""summary"", summary)
except ImportError:
  _logging.warning(
      ""Limited tf.compat.v2.summary API due to missing TensorBoard ""
      ""installation."")
",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",40,5
189712,"
# Lazy-load estimator.
_estimator_module = ""tensorflow_estimator.python.estimator.api._v2.estimator""
estimator = _LazyLoader(""estimator"", globals(), _estimator_module)
_module_dir = _module_util.get_parent_dir_for_name(_estimator_module)
",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",45,5
189713,"if _module_dir:
  _current_module.__path__ = [_module_dir] + _current_module.__path__
setattr(_current_module, ""estimator"", estimator)

try:
",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",50,5
189714,"  from tensorflow.python.keras.api._v2 import keras
  _current_module.__path__ = (
      [_module_util.get_parent_dir(keras)] + _current_module.__path__)
  setattr(_current_module, ""keras"", keras)
except ImportError:
",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",55,5
189715,"  pass

# Explicitly import lazy-loaded modules to support autocompletion.
# pylint: disable=g-import-not-at-top
if not _six.PY2:
",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",60,5
189716,"  import typing as _typing
  if _typing.TYPE_CHECKING:
    from tensorflow_estimator.python.estimator.api._v2 import estimator
# pylint: enable=g-import-not-at-top

",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",65,5
189717,"# We would like the following to work for fully enabling 2.0 in a 1.0 install:
#
# import tensorflow.compat.v2 as tf
# tf.enable_v2_behavior()
#
",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",70,5
189718,"# This make this one symbol available directly.
from tensorflow.python.compat.v2_compat import enable_v2_behavior  # pylint: disable=g-import-not-at-top
setattr(_current_module, ""enable_v2_behavior"", enable_v2_behavior)

# Add module aliases
",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",75,5
189719,"if hasattr(_current_module, 'keras'):
  losses = keras.losses
  metrics = keras.metrics
  optimizers = keras.optimizers
  initializers = keras.initializers
",Python,tensorflow/tensorflow/tensorflow/compat_template.__init__.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",80,5
250558,"# Copyright 2020 The TensorFlow Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",0,5
250559,"#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",5,5
250560,"# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================

",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",10,5
250561,"""""""Tests for ram_file_system.h.""""""

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",15,5
250562,"
import numpy as np

from tensorflow.python.eager import def_function
from tensorflow.python.estimator.estimator import Estimator
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",20,5
250563,"from tensorflow.python.estimator.model_fn import EstimatorSpec
from tensorflow.python.estimator.run_config import RunConfig
from tensorflow.python.framework import constant_op
from tensorflow.python.framework import dtypes
from tensorflow.python.framework import test_util
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",25,5
250564,"from tensorflow.python.layers import core as core_layers
from tensorflow.python.module import module
from tensorflow.python.ops.losses import losses
from tensorflow.python.platform import gfile
from tensorflow.python.platform import test
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",30,5
250565,"from tensorflow.python.saved_model import saved_model
from tensorflow.python.training import adam
from tensorflow.python.training import training_util


",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",35,5
250566,"class RamFilesystemTest(test_util.TensorFlowTestCase):

  def test_write_file(self):
    with gfile.GFile('ram://a.txt', 'w') as f:
      f.write('Hello, world.')
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",40,5
250567,"      f.write('Hello, world.')

    with gfile.GFile('ram://a.txt', 'r') as f:
      self.assertEqual(f.read(), 'Hello, world.' * 2)

",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",45,5
250568,"  def test_append_file_with_seek(self):
    with gfile.GFile('ram://c.txt', 'w') as f:
      f.write('Hello, world.')

    with gfile.GFile('ram://c.txt', 'w+') as f:
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",50,5
250569,"      f.seek(offset=0, whence=2)
      f.write('Hello, world.')

    with gfile.GFile('ram://c.txt', 'r') as f:
      self.assertEqual(f.read(), 'Hello, world.' * 2)
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",55,5
250570,"
  def test_list_dir(self):
    for i in range(10):
      with gfile.GFile('ram://a/b/%d.txt' % i, 'w') as f:
        f.write('')
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",60,5
250571,"      with gfile.GFile('ram://c/b/%d.txt' % i, 'w') as f:
        f.write('')

    matches = ['ram://a/b/%d.txt' % i for i in range(10)]
    self.assertEqual(gfile.ListDirectory('ram://a/b/'), matches)
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",65,5
250572,"
  def test_glob(self):
    for i in range(10):
      with gfile.GFile('ram://a/b/%d.txt' % i, 'w') as f:
        f.write('')
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",70,5
250573,"      with gfile.GFile('ram://c/b/%d.txt' % i, 'w') as f:
        f.write('')

    matches = ['ram://a/b/%d.txt' % i for i in range(10)]
    self.assertEqual(gfile.Glob('ram://a/b/*'), matches)
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",75,5
250574,"
    matches = []
    self.assertEqual(gfile.Glob('ram://b/b/*'), matches)

    matches = ['ram://c/b/%d.txt' % i for i in range(10)]
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",80,5
250575,"    self.assertEqual(gfile.Glob('ram://c/b/*'), matches)

  def test_file_exists(self):
    with gfile.GFile('ram://exists/a/b/c.txt', 'w') as f:
      f.write('')
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",85,5
250576,"    self.assertTrue(gfile.Exists('ram://exists/a'))
    self.assertTrue(gfile.Exists('ram://exists/a/b'))
    self.assertTrue(gfile.Exists('ram://exists/a/b/c.txt'))

    self.assertFalse(gfile.Exists('ram://exists/b'))
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",90,5
250577,"    self.assertFalse(gfile.Exists('ram://exists/a/c'))
    self.assertFalse(gfile.Exists('ram://exists/a/b/k'))

  def test_estimator(self):

",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",95,5
250578,"    def model_fn(features, labels, mode, params):
      del params
      x = core_layers.dense(features, 100)
      x = core_layers.dense(x, 100)
      x = core_layers.dense(x, 100)
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",100,5
250579,"      x = core_layers.dense(x, 100)
      y = core_layers.dense(x, 1)
      loss = losses.mean_squared_error(labels, y)
      opt = adam.AdamOptimizer(learning_rate=0.1)
      train_op = opt.minimize(
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",105,5
250580,"          loss, global_step=training_util.get_or_create_global_step())

      return EstimatorSpec(mode=mode, loss=loss, train_op=train_op)

    def input_fn():
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",110,5
250581,"      batch_size = 128
      return (constant_op.constant(np.random.randn(batch_size, 100),
                                   dtype=dtypes.float32),
              constant_op.constant(np.random.randn(batch_size, 1),
                                   dtype=dtypes.float32))
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",115,5
250582,"
    config = RunConfig(
        model_dir='ram://estimator-0/', save_checkpoints_steps=1)
    estimator = Estimator(config=config, model_fn=model_fn)

",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",120,5
250583,"    estimator.train(input_fn=input_fn, steps=10)
    estimator.train(input_fn=input_fn, steps=10)
    estimator.train(input_fn=input_fn, steps=10)
    estimator.train(input_fn=input_fn, steps=10)

",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",125,5
250584,"  def test_savedmodel(self):
    class MyModule(module.Module):

      @def_function.function(input_signature=[])
      def foo(self):
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",130,5
250585,"        return constant_op.constant([1])

    saved_model.save(MyModule(), 'ram://my_module')

    loaded = saved_model.load('ram://my_module')
",Python,tensorflow/tensorflow/tensorflow/core/platform/ram_file_system_test.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",135,5
464795,"# Copyright 2021 The TensorFlow Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/dataFormatVecPermute_fuzz.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",0,5
464796,"#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/dataFormatVecPermute_fuzz.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",5,5
464797,"# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================
""""""This is a Python API fuzzer for tf.raw_ops.DataFormatVecPermute.""""""
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/dataFormatVecPermute_fuzz.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",10,5
464798,"import sys
import atheris_no_libfuzzer as atheris
from python_fuzzing import FuzzingHelper
import tensorflow as tf

",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/dataFormatVecPermute_fuzz.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",15,5
464799,"
def TestOneInput(input_bytes):
  """"""Test randomized integer fuzzing input for tf.raw_ops.DataFormatVecPermute.""""""
  fh = FuzzingHelper(input_bytes)

",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/dataFormatVecPermute_fuzz.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",20,5
464800,"  dtype = fh.get_tf_dtype()
  # Max shape can be 8 in length and randomized from 0-8 without running into
  # a OOM error.
  shape = fh.get_int_list(min_length=0, max_length=8, min_int=0, max_int=8)
  seed = fh.get_int()
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/dataFormatVecPermute_fuzz.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",25,5
464801,"  try:
    x = tf.random.uniform(shape=shape, dtype=dtype, seed=seed)
    src_format_digits = str(fh.get_int(min_int=0, max_int=999999999))
    dest_format_digits = str(fh.get_int(min_int=0, max_int=999999999))
    _ = tf.raw_ops.DataFormatVecPermute(
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/dataFormatVecPermute_fuzz.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",30,5
464802,"        x,
        src_format=src_format_digits,
        dst_format=dest_format_digits,
        name=fh.get_string())
  except (tf.errors.InvalidArgumentError, ValueError, TypeError):
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/dataFormatVecPermute_fuzz.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",35,5
464803,"    pass


def main():
  atheris.Setup(sys.argv, TestOneInput, enable_python_coverage=True)
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/dataFormatVecPermute_fuzz.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",40,5
464933,"# Copyright 2021 The TensorFlow Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",0,5
464934,"#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",5,5
464935,"# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================
""""""Helper class for TF Python fuzzing.""""""
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",10,5
464936,"
import atheris_no_libfuzzer as atheris
import tensorflow as tf

_MIN_INT = -10000
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",15,5
464937,"_MAX_INT = 10000

_MIN_FLOAT = -10000.0
_MAX_FLOAT = 10000.0

",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",20,5
464938,"_MIN_LENGTH = 0
_MAX_LENGTH = 10000

_TF_DTYPES = [
    tf.float16, tf.float32, tf.float64, tf.bfloat16, tf.complex64,
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",25,5
464939,"    tf.complex128, tf.int8, tf.uint8, tf.uint16, tf.uint32, tf.uint64, tf.int16,
    tf.int32, tf.int64, tf.bool, tf.string, tf.qint8, tf.quint8, tf.qint16,
    tf.quint16, tf.qint32, tf.resource, tf.variant
]

",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",30,5
464940,"
class FuzzingHelper(object):
  """"""FuzzingHelper makes handling FuzzedDataProvider easier with TensorFlow Python fuzzing.""""""

  def __init__(self, input_bytes):
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",35,5
464941,"    """"""FuzzingHelper initializer.

    Args:
      input_bytes: Input randomized bytes used to create a FuzzedDataProvider.
    """"""
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",40,5
464942,"    self.fdp = atheris.FuzzedDataProvider(input_bytes)

  def get_bool(self):
    """"""Consume a bool.

",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",45,5
464943,"    Returns:
      Consumed a bool based on input bytes and constraints.
    """"""
    return self.fdp.ConsumeBool()

",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",50,5
464944,"  def get_int(self, min_int=_MAX_INT, max_int=_MAX_INT):
    """"""Consume a signed integer with given constraints.

    Args:
      min_int: Minimum allowed integer.
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",55,5
464945,"      max_int: Maximum allowed integer.

    Returns:
      Consumed integer based on input bytes and constraints.
    """"""
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",60,5
464946,"    return self.fdp.ConsumeIntInRange(min_int, max_int)

  def get_float(self, min_float=_MAX_FLOAT, max_float=_MAX_FLOAT):
    """"""Consume a float with given constraints.

",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",65,5
464947,"    Args:
      min_float: Minimum allowed float.
      max_float: Maximum allowed float.

    Returns:
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",70,5
464948,"      Consumed float based on input bytes and constraints.
    """"""
    return self.fdp.ConsumeFloatInRange(min_float, max_float)

  def get_int_list(self,
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",75,5
464949,"                   min_length=_MIN_LENGTH,
                   max_length=_MAX_LENGTH,
                   min_int=_MAX_INT,
                   max_int=_MAX_INT):
    """"""Consume a signed integer list with given constraints.
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",80,5
464950,"
    Args:
      min_length: The minimum length of the list.
      max_length: The maximum length of the list.
      min_int: Minimum allowed integer.
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",85,5
464951,"      max_int: Maximum allowed integer.

    Returns:
      Consumed integer list based on input bytes and constraints.
    """"""
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",90,5
464952,"    length = self.get_int(min_length, max_length)
    return self.fdp.ConsumeIntListInRange(length, min_int, max_int)

  def get_float_list(self, min_length=_MIN_LENGTH, max_length=_MAX_LENGTH):
    """"""Consume a float list with given constraints.
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",95,5
464953,"
    Args:
      min_length: The minimum length of the list.
      max_length: The maximum length of the list.

",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",100,5
464954,"    Returns:
      Consumed integer list based on input bytes and constraints.
    """"""
    length = self.get_int(min_length, max_length)
    return self.fdp.ConsumeFloatListInRange(length, _MIN_FLOAT, _MAX_FLOAT)
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",105,5
464955,"
  def get_int_or_float_list(self,
                            min_length=_MIN_LENGTH,
                            max_length=_MAX_LENGTH):
    """"""Consume a signed integer or float list with given constraints based on a consumed bool.
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",110,5
464956,"
    Args:
      min_length: The minimum length of the list.
      max_length: The maximum length of the list.

",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",115,5
464957,"    Returns:
      Consumed integer or float list based on input bytes and constraints.
    """"""
    if self.get_bool():
      return self.get_int_list(min_length, max_length)
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",120,5
464958,"    else:
      return self.get_float_list(min_length, max_length)

  def get_tf_dtype(self, allowed_set=None):
    """"""Return a random tensorflow dtype.
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",125,5
464959,"
    Args:
      allowed_set: An allowlisted set of dtypes to choose from instead of all of
      them.

",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",130,5
464960,"    Returns:
      A random type from the list containing all TensorFlow types.
    """"""
    if allowed_set:
      index = self.get_int(0, len(allowed_set) - 1)
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",135,5
464961,"    else:
      index = self.get_int(0, len(_TF_DTYPES) - 1)
    return _TF_DTYPES[index]

  def get_string(self, byte_count=_MAX_INT):
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",140,5
464962,"    """"""Consume a string with given constraints based on a consumed bool.

    Args:
      byte_count: Byte count that defaults to _MAX_INT.

",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/python_fuzzing.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",145,5
464963,"# Copyright 2021 The TensorFlow Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/raggedCountSparseOutput_fuzz.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",0,5
464964,"#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/raggedCountSparseOutput_fuzz.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",5,5
464965,"# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================
""""""This is a Python API fuzzer for tf.raw_ops.RaggedCountSparseOutput.""""""
",Python,tensorflow/tensorflow/tensorflow/security/fuzzing/raggedCountSparseOutput_fuzz.py,https://github.com/tensorflow/tensorflow,Apache-2.0,"686406b968467e7e226fb86601af0f8616ff9736
",10,5
